/*
 * Football championship API
 * Football
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ClubPlayer;
import java.time.LocalDate;
import org.openapitools.client.model.Player;
import org.openapitools.client.model.PlayerStatistics;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for PlayerApi
 */
@Disabled
public class PlayerApiTest {

    private final PlayerApi api = new PlayerApi();

    /**
     * Create or update players without attaching them into club
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createOrUpdatePlayersTest() throws ApiException {
        List<Player> player = null;
        List<Player> response = api.createOrUpdatePlayers(player);
        // TODO: test validations
    }

    /**
     * Get list of players in the championship
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getPlayersTest() throws ApiException {
        String name = null;
        Integer ageMinimum = null;
        Integer ageMaximum = null;
        String clubName = null;
        List<ClubPlayer> response = api.getPlayers(name, ageMinimum, ageMaximum, clubName);
        // TODO: test validations
    }

    /**
     * Get statistics for a specific player
     *
     * Important ! Note that own goals are not considered as goal inside goals scored. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getStatisticsOfPlayerByIdTest() throws ApiException {
        String id = null;
        LocalDate seasonYear = null;
        PlayerStatistics response = api.getStatisticsOfPlayerById(id, seasonYear);
        // TODO: test validations
    }

}
